<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<title>Bucket List</title>
<style>
  body { font-family: Arial, sans-serif; max-width: 600px; margin: auto; padding: 20px; }
  ul { list-style: none; padding: 0; }
  li { margin-bottom: 6px; display: flex; align-items: center; }
  li span.index {
    width: 30px;
    display: inline-block;
    font-weight: bold;
  }
  button.delete {
    margin-left: 10px;
    color: red;
    background: none;
    border: none;
    font-weight: bold;
    font-size: 16px;
    cursor: pointer;
    padding: 0 4px;
    line-height: 1;
    user-select: none;
  }
  button.delete:hover {
    color: darkred;
  }
  input[type="text"] {
    flex-grow: 1;
    font-size: 16px;
    padding: 4px 6px;
  }
</style>
</head>
<body>

<h1 id="title">My Bucket List ✅</h1>

<input type="text" id="userNameInput" placeholder="Enter your name" />
<button id="setNameBtn">Set Name</button>

<div style="margin-top:15px; display: flex; gap: 6px;">
  <input type="text" id="newItemInput" placeholder="Add new item" />
  <button id="addBtn">Add Item</button>
</div>

<h2>To Do</h2>
<ul id="todoList"></ul>

<h2>Completed</h2>
<ul id="doneList"></ul>

<button id="clearBtn">Clear All (Reset)</button>

<div style="margin-top:20px;">
  <input type="file" id="importFile" accept=".txt" style="display:none" />
  <button id="importBtn">Import</button>
  <button id="exportBtn">Export</button>
</div>

<script>
const STORAGE_KEY = 'bucketListData';
let todoList = [];
let doneList = [];
let userName = '';

const userNameInput = document.getElementById('userNameInput');
const setNameBtn = document.getElementById('setNameBtn');
const title = document.getElementById('title');
const newItemInput = document.getElementById('newItemInput');
const addBtn = document.getElementById('addBtn');
const todoListElem = document.getElementById('todoList');
const doneListElem = document.getElementById('doneList');
const clearBtn = document.getElementById('clearBtn');
const importBtn = document.getElementById('importBtn');
const importFile = document.getElementById('importFile');
const exportBtn = document.getElementById('exportBtn');

const defaultTodo = ["Make a chamoyada","Turn off phone 48h","Draw a self-portrait"];
const defaultDone = ["Ride a hot air balloon","Went on safari"];

function saveData(){
  localStorage.setItem(STORAGE_KEY, JSON.stringify({
    userName,
    todoList,
    doneList
  }));
}

function loadData(){
  const dataStr = localStorage.getItem(STORAGE_KEY);
  if(dataStr){
    try{
      const data = JSON.parse(dataStr);
      userName = data.userName || '';
      todoList = Array.isArray(data.todoList) ? data.todoList : [...defaultTodo];
      doneList = Array.isArray(data.doneList) ? data.doneList : [...defaultDone];
    }catch{
      userName = '';
      todoList = [...defaultTodo];
      doneList = [...defaultDone];
    }
  }else{
    userName = '';
    todoList = [...defaultTodo];
    doneList = [...defaultDone];
  }
  userNameInput.value = userName;
  updateTitle();
}

function updateTitle(){
  title.textContent = userName ? `${userName}'s Bucket List ✅` : 'My Bucket List ✅';
}

function renderList(){
  todoListElem.innerHTML = '';
  todoList.forEach((item, i) => {
    const li = document.createElement('li');

    const checkbox = document.createElement('input');
    checkbox.type = 'checkbox';
    checkbox.addEventListener('change', ()=>{
      if(checkbox.checked){
        doneList.push(item);
        todoList.splice(i,1);
        saveData();
        renderList();
      }
    });

    const indexSpan = document.createElement('span');
    indexSpan.textContent = (i + 1) + '.';
    indexSpan.className = 'index';

    const span = document.createElement('span');
    span.textContent = item;
    span.style.flexGrow = '1';

    const delBtn = document.createElement('button');
    delBtn.textContent = 'x';
    delBtn.className = 'delete';
    delBtn.onclick = () => {
      todoList.splice(i,1);
      saveData();
      renderList();
    };

    li.appendChild(checkbox);
    li.appendChild(indexSpan);
    li.appendChild(span);
    li.appendChild(delBtn);
    todoListElem.appendChild(li);
  });

  doneListElem.innerHTML = '';
  doneList.forEach((item, i) => {
    const li = document.createElement('li');

    const checkbox = document.createElement('input');
    checkbox.type = 'checkbox';
    checkbox.checked = true;
    checkbox.addEventListener('change', ()=>{
      if(!checkbox.checked){
        todoList.push(item);
        doneList.splice(i,1);
        saveData();
        renderList();
      }
    });

    const indexSpan = document.createElement('span');
    indexSpan.textContent = (i + 1) + '.';
    indexSpan.className = 'index';

    const span = document.createElement('span');
    span.textContent = item;
    span.style.flexGrow = '1';

    const delBtn = document.createElement('button');
    delBtn.textContent = 'x';
    delBtn.className = 'delete';
    delBtn.onclick = () => {
      doneList.splice(i,1);
      saveData();
      renderList();
    };

    li.appendChild(checkbox);
    li.appendChild(indexSpan);
    li.appendChild(span);
    li.appendChild(delBtn);
    doneListElem.appendChild(li);
  });
}

setNameBtn.addEventListener('click', () => {
  userName = userNameInput.value.trim();
  updateTitle();
  saveData();
});

addBtn.addEventListener('click', () => {
  const val = newItemInput.value.trim();
  if(val){
    todoList.push(val);
    newItemInput.value = '';
    saveData();
    renderList();
  }
});

clearBtn.addEventListener('click', () => {
  if(confirm('Clear all and reset to default?')){
    userName = '';
    userNameInput.value = '';
    todoList = [...defaultTodo];
    doneList = [...defaultDone];
    updateTitle();
    saveData();
    renderList();
  }
});

importBtn.addEventListener('click', () => {
  importFile.click();
});

importFile.addEventListener('change', e => {
  const file = e.target.files[0];
  if(!file) return;
  const reader = new FileReader();
  reader.onload = () => {
    parseImport(reader.result);
  };
  reader.readAsText(file);
  importFile.value = '';
});

function parseImport(text){
  let lines = text.split(/\r?\n/);
  let newUser = '';
  let newTodo = [];
  let newDone = [];
  let section = '';

  for(let line of lines){
    line = line.trim();
    if(line.toLowerCase().endsWith("bucket list")){
      let m = line.match(/^(.+?)'s bucket list$/i);
      if(m) newUser = m[1];
      continue;
    }
    if(line.toLowerCase() === 'things to do:' || line.toLowerCase() === 'things to do'){
      section = 'todo';
      continue;
    }
    if(line.toLowerCase() === 'completed:' || line.toLowerCase() === 'completed'){
      section = 'done';
      continue;
    }
    if(line === '' || line.toLowerCase().startsWith('exported on')) continue;

    line = line.replace(/^\d+\.\s*/, '');
    if(section === 'todo' && line) newTodo.push(line);
    if(section === 'done' && line) newDone.push(line);
  }

  userName = newUser;
  userNameInput.value = newUser;
  todoList = newTodo.length ? newTodo : [];
  doneList = newDone.length ? newDone : [];
  updateTitle();
  saveData();
  renderList();
}

exportBtn.addEventListener('click', () => {
  let lines = [];
  if(userName){
    lines.push(`${userName}'s Bucket List`);
  } else {
    lines.push('My Bucket List');
  }
  lines.push(`Exported on: ${new Date().toLocaleDateString()}`);
  lines.push('');
  lines.push('Things to Do:');
  todoList.forEach((item,i) => {
    lines.push(`${i+1}. ${item}`);
  });
  lines.push('');
  lines.push('Completed:');
  doneList.forEach((item,i) => {
    lines.push(`${i+1}. ${item}`);
  });

  const blob = new Blob([lines.join('\n')], {type: 'text/plain;charset=utf-8'});
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = 'bucket_list_export.txt';
  a.click();
  URL.revokeObjectURL(url);
});

// 初始化
loadData();
renderList();

</script>

</body>
</html>
